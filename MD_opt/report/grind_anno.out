--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         48234496 B, 64 B, 23-way associative
Command:          ./MD 10
Data file:        report/cachegrind.out
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
           Ir  I1mr  ILmr            Dr        D1mr        DLmr            Dw       D1mw       DLmw 
--------------------------------------------------------------------------------
7,100,217,088 1,587 1,560 1,705,114,499 217,480,796 125,912,687 1,757,395,745 53,745,506 53,726,933  PROGRAM TOTALS

--------------------------------------------------------------------------------
           Ir I1mr ILmr            Dr        D1mr        DLmr          Dw       D1mw       DLmw  file:function
--------------------------------------------------------------------------------
6,142,870,939   68   68 1,674,816,399 217,449,106 125,899,764 919,074,966 40,904,563 40,886,065  /lustre/home/d171/s1898201/PP_cw/MD_opt/MD.c:evolve
  820,823,534    8    8            51          51          37 820,822,681 12,825,374 12,825,373  ???:__intel_avx_rep_memset
   35,579,142  102  100     7,381,058          11          11   5,358,060      8,198      8,198  ???:__printf_fp
   26,100,773   68   68     7,720,964       9,292       9,290   2,584,580      4,614      4,614  ???:_IO_vfscanf
   18,740,564   53   53     2,628,836           4           4   1,380,234          3          3  ???:____strtod_l_internal
   11,535,495    6    6     3,827,439           0           0   1,783,658          1          1  ???:hack_digit.13574
    8,630,972   66   65     1,972,839         184         177   2,004,936        116        111  ???:vfprintf
    8,476,652    7    6     1,248,849           0           0     842,003          0          0  ???:__mpn_mul_1

--------------------------------------------------------------------------------
-- Auto-annotated source: /lustre/home/d171/s1898201/PP_cw/MD_opt/MD.c
--------------------------------------------------------------------------------
         Ir I1mr ILmr          Dr       D1mr       DLmr          Dw       D1mw       DLmw 

-- line 7 ----------------------------------------
          .    .    .           .          .          .           .          .          .  #include <string.h>
          .    .    .           .          .          .           .          .          .  #include "coord.h"
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  void visc_force(int N, double *f, double *vis, double *vel);
          .    .    .           .          .          .           .          .          .  void add_norm(int N, double *r, double *delta);
          .    .    .           .          .          .           .          .          .  double force(double W, double delta, double r);
          .    .    .           .          .          .           .          .          .  void wind_force(int N, double *f, double *vis, double vel);
          .    .    .           .          .          .           .          .          .  
         22    1    1           0          0          0          14          0          0  void evolve(int count, double dt) {
          .    .    .           .          .          .           .          .          .  	int step;
          .    .    .           .          .          .           .          .          .  	int i, j, k, l;
          .    .    .           .          .          .           .          .          .  	int collided;
          .    .    .           .          .          .           .          .          .  	double Size;
          .    .    .           .          .          .           .          .          .  	/*
          .    .    .           .          .          .           .          .          .  	 * Loop over timesteps.
          .    .    .           .          .          .           .          .          .  	 */
          .    .    .           .          .          .           .          .          .  #pragma vector aligned
         43    0    0           0          0          0           0          0          0  	for (step = 1; step <= count; step++) {
         52    2    2           0          0          0          13         11         11  		printf("timestep %d\n", step);
         54    0    0           2          0          0          13          0          0  		printf("collisions %d\n", collisions);
          .    .    .           .          .          .           .          .          .  
         52    0    0           0          0          0          13          0          0  		memset(r, 0., sizeof(double) * Nbody + 16);
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  		/* set the viscosity term in the force calculation */
        182    0    0           0          0          0           0          0          0  		for (j = 0; j < Ndim; j++) {
     79,872    2    2      79,872     20,007      5,643           0          0          0  			visc_force(Nbody, f[j], vis, velo[j]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  		/* add the wind term in the force calculation */
          .    .    .           .          .          .           .          .          .  		for (j = 0; j < Ndim; j++) {
     53,250    2    2      53,250     13,340          0           0          0          0  			wind_force(Nbody, f[j], vis, wind[j]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  		/* calculate distance from central mass */
          .    .    .           .          .          .           .          .          .  		//for (k = 0; k < Nbody; k++) { // Moved to front
          .    .    .           .          .          .           .          .          .  		//  r[k] = 0.0;									// memset
          .    .    .           .          .          .           .          .          .  		//}
          .    .    .           .          .          .           .          .          .  		for (i = 0; i < Ndim; i++) {
     53,248    3    3           0          0          0      53,248          0          0  			add_norm(Nbody, r, pos[i]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  
     19,994    0    0           0          0          0           0          0          0  		for (k = 0; k < Nbody; k++) {
     53,248    1    1      26,624      6,292          0      26,624          0          0  			r[k] = sqrt(r[k]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  		/* calculate central force */
          .    .    .           .          .          .           .          .          .  		for (l = 0; l < Ndim; l++) {
          .    .    .           .          .          .           .          .          .  #pragma vector aligned
          .    .    .           .          .          .           .          .          .  #pragma ivdep
     79,911    2    2          26         13          0           0          0          0  			for (i = 0; i < Nbody; i++) {
    319,490    3    3     212,994     53,159          0           0          0          0  				double temp = f[l][i] - force(G * mass[i] * M_central, pos[l][i], r[i]);
     79,872    0    0           0          0          0      79,872          0          0  				f[l][i] = temp;
          .    .    .           .          .          .           .          .          .  			}
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  		/* calculate pairwise separation of particles */
          .    .    .           .          .          .           .          .          .  		//k = 0;
        273    2    2           0          0          0          39         26          0  		for (l = 0; l < Ndim; l++) {
         39    0    0           0          0          0           0          0          0  			k = 0;
    319,683    1    1          39         39         39          39          0          0  			for (i = 0; i < Nbody; i++) {
          .    .    .           .          .          .           .          .          .  #pragma ivdep
          .    .    .           .          .          .           .          .          .  //#pragma vector aligned
128,907,831    2    2           0          0          0           0          0          0  				for (j = i + 1; j < Nbody; j++) {
575,075,592    5    5 164,096,751 29,099,508     13,338 163,817,472 40,884,519 40,884,518  					delta_pos[l][k] = pos[l][i] - pos[l][j];
    598,143    0    0           0          0          0           0          0          0  					k = k + 1;
          .    .    .           .          .          .           .          .          .  				}
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  			}
          .    .    .           .          .          .           .          .          .  		} // TODO: improve
          .    .    .           .          .          .           .          .          .  		/* calculate norm of separation vector */
          .    .    .           .          .          .           .          .          .  		//for (k = 0; k < Npair; k++) {
          .    .    .           .          .          .           .          .          .  		//	delta_r[k] = 0.0;
          .    .    .           .          .          .           .          .          .  		//}
        104    1    1          39         13         13          13          0          0  		memset(delta_r, 0., sizeof(double) * Npair + 16);
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  		for (i = 0; i < Ndim; i++) {
100,638,722    0    0           0          0          0 100,638,720          0          0  			add_norm(Npair, delta_r, delta_pos[i]);
          .    .    .           .          .          .           .          .          .  		}
150,958,092    0    0           0          0          0           0          0          0  		for (k = 0; k < Npair; k++) {
100,638,720    2    2  50,319,360 12,579,852 12,579,852  50,319,360          0          0  			delta_r[k] = sqrt(delta_r[k]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  		/*
          .    .    .           .          .          .           .          .          .  		 * add pairwise forces.
          .    .    .           .          .          .           .          .          .  		 */
         12    0    0           0          0          0           0          0          0  		k = 0;
          .    .    .           .          .          .           .          .          .  		double tempForce; // TODO: improve
     98,352    1    1          12         12         12           0          0          0  		for (i = 0; i < Nbody; i++) {
302,309,364    3    3           0          0          0           0          0          0  			for (j = i + 1; j < Nbody; j++) {
201,326,580    0    0 100,687,860 12,484,933      6,156           0          0          0  				Size = radius[i] + radius[j];
          .    .    .           .          .          .           .          .          .  				collided = 0;
503,193,600    2    2 100,638,720 12,579,852 12,579,852           0          0          0  				if (delta_r[k] >= Size) {
          .    .    .           .          .          .           .          .          .  					for (l = 0; l < Ndim; l++) {
          .    .    .           .          .          .           .          .          .  						/*  flip force if close in */
805,208,040    0    0 301,965,300 37,783,273 37,739,568           0          0          0  						tempForce = force(G * mass[i] * mass[j], delta_pos[l][k], delta_r[k]);
905,748,480    4    4 301,916,160     16,536         36 301,916,160          0          0  						f[l][i] = f[l][i] - tempForce;
905,748,480    2    2 301,916,160 37,325,441     18,432 301,916,160          0          0  						f[l][j] = f[l][j] + tempForce;
          .    .    .           .          .          .           .          .          .  					}
          .    .    .           .          .          .           .          .          .  				} else {
          .    .    .           .          .          .           .          .          .  					for (l = 0; l < Ndim; l++) {
          .    .    .           .          .          .           .          .          .  						tempForce = force(G * mass[i] * mass[j], delta_pos[l][k], delta_r[k]);
          .    .    .           .          .          .           .          .          .  						f[l][i] = f[l][i] + tempForce;
          .    .    .           .          .          .           .          .          .  						f[l][j] = f[l][j] - tempForce;
          .    .    .           .          .          .           .          .          .  						collided = 1;
          .    .    .           .          .          .           .          .          .  					}
          .    .    .           .          .          .           .          .          .  					if (collided == 1) {
          .    .    .           .          .          .           .          .          .  						collisions++;
          .    .    .           .          .          .           .          .          .  					}
          .    .    .           .          .          .           .          .          .  				}
     49,140    0    0           0          0          0           0          0          0  				k = k + 1;
          .    .    .           .          .          .           .          .          .  			}
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  	/* update positions */
        180    1    1          12         12         12           0          0          0  	for (j = 0; j < Ndim; j++) {
          .    .    .           .          .          .           .          .          .  #pragma ivdep
     55,332    0    0           0          0          0           0          0          0  		for (i = 0; i < Nbody; i++) {
    368,640    4    4     147,456     36,936     36,936      73,728          0          0  			pos[j][i] = pos[j][i] + dt * velo[j][i];
    368,640    1    1     147,456     36,936     14,448      73,728          0          0  			velo[j][i] = velo[j][i] + dt * (f[j][i] / mass[i]);
          .    .    .           .          .          .           .          .          .  		}
          .    .    .           .          .          .           .          .          .  	}
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  	/* update velocities */
          .    .    .           .          .          .           .          .          .  //	for (j = 0; j < Ndim; j++) {
          .    .    .           .          .          .           .          .          .  //#pragma ivdep
          .    .    .           .          .          .           .          .          .  //		for (i = 0; i < Nbody; i++) {
          .    .    .           .          .          .           .          .          .  //			velo[j][i] = velo[j][i] + dt * (f[j][i] / mass[i]);
          .    .    .           .          .          .           .          .          .  //		}
          .    .    .           .          .          .           .          .          .  //	}
          .    .    .           .          .          .           .          .          .  }
          8    0    0           7          1          1           0          0          0  }
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  double force(double W, double delta, double r) {
704,763,904    0    0 100,638,720 12,440,293      6,144           0          0          0  	return W * delta / (r*r*r);
          .    .    .           .          .          .           .          .          .  }
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  void visc_force(const int N, double *f, double *vis, double *velo) {
          .    .    .           .          .          .           .          .          .  	int i;
          .    .    .           .          .          .           .          .          .  #pragma vector aligned
          .    .    .           .          .          .           .          .          .  #pragma ivdep
     59,943    1    1           0          0          0           0          0          0  	for (i = 0; i < N; i++) {
    239,616    2    2     159,744     20,020         11      79,872     20,007      1,536  		f[i] = -vis[i] * velo[i];
          .    .    .           .          .          .           .          .          .  	}
          .    .    .           .          .          .           .          .          .  }
          .    .    .           .          .          .           .          .          .  
          .    .    .           .          .          .           .          .          .  void add_norm(const int N, double * r, double * delta) {
          .    .    .           .          .          .           .          .          .  	int k;
          .    .    .           .          .          .           .          .          .  #pragma vector aligned
          .    .    .           .          .          .           .          .          .  #pragma ivdep
301,956,146    1    1           0          0          0           0          0          0  	for (k = 0; k < N; k++) {
453,113,856    5    5 251,729,920 62,932,605 62,899,260           0          0          0  		r[k] += (delta[k] * delta[k]);
          .    .    .           .          .          .           .          .          .  	}
          .    .    .           .          .          .           .          .          .  }
          .    .    .           .          .          .           .          .          .  
         24    1    1           4          0          0           6          0          0  void wind_force(const int N, double *f, double *vis, double velo) {
          .    .    .           .          .          .           .          .          .  	int i;
          .    .    .           .          .          .           .          .          .  #pragma vector aligned
          .    .    .           .          .          .           .          .          .  #pragma ivdep
     40,001    1    1          39         26         11           0          0          0  	for (i = 0; i < N; i++) {
    346,112   10   10      79,872     20,007          0      79,872          0          0  		f[i] -= vis[i] * velo;
          .    .    .           .          .          .           .          .          .  	}
          .    .    .           .          .          .           .          .          .  }
--------------------------------------------------------------------------------
Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw 
--------------------------------------------------------------------------------
87    4    4 98  100  100 52   76   76  percentage of events annotated

