--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         48234496 B, 64 B, 23-way associative
Command:          ./MD 4
Data file:        report/cachegrind.out
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
        Ir  I1mr  ILmr         Dr   D1mr   DLmr        Dw   D1mw  DLmw 
--------------------------------------------------------------------------------
74,055,830 1,567 1,542 18,838,197 24,371 11,895 9,124,233 20,913 7,485  PROGRAM TOTALS

--------------------------------------------------------------------------------
        Ir I1mr ILmr        Dr  D1mr  DLmr        Dw   D1mw  DLmw  file:function
--------------------------------------------------------------------------------
26,149,925   70   70 7,741,444 9,529 9,290 2,584,580 12,459   962  ???:_IO_vfscanf
18,740,564   54   54 2,628,836     4     4 1,380,234      4     4  ???:____strtod_l_internal
 4,233,264    5    5   650,954    50     2   364,873      1     1  ???:str_to_mpn.isra.0
 3,958,859    3    3   942,588   163     2   565,553      0     0  ???:__chkp_map
 3,556,476    2    1 1,143,153     4     0   889,119      0     0  ???:__chkp_check_bounds
 2,855,711    2    2 1,175,881   352     0   671,932     50     0  ???:__chkp_map_for_load
 1,903,354    9    9   258,048     0     0   239,004      1     1  ???:round_and_return
 1,634,469   14   14   614,460 3,076     0   454,713      4     0  /lustre/home/d171/s1898201/PP_cw/MD_raw/C/util.c:add_norm
 1,290,414   12   12   491,583 3,073     0   356,415      1     0  /lustre/home/d171/s1898201/PP_cw/MD_raw/C/util.c:wind_force
 1,258,607  103  103   438,612   102     1   446,818    486     1  /lustre/home/d171/s1898201/PP_cw/MD_raw/C/control.c:main
 1,179,870   13   13   430,161 3,073     0   319,563  1,539   960  /lustre/home/d171/s1898201/PP_cw/MD_raw/C/util.c:visc_force
 1,089,522    2    2   466,938     0     0   155,646      0     0  ???:_IO_sputbackc
 1,032,000    2    2   137,600     0     0    68,800      0     0  ???:__mpn_lshift
   859,284    3    3    95,476     1     1    47,738      1     1  ???:__GI_memcpy
   718,686    5    3   184,806     0     0   205,337     81    27  ???:__chkp_cpstore
   558,040   70   61   557,745   490     0        90      2     1  ???:???
   516,267    4    3    73,748     3     3         0      0     0  ???:__GI_strlen
   401,408    2    2    86,016     0     0    28,672      0     0  ???:__mpn_construct_double
   375,668    3    3   108,746     0     0    98,860      7     1  ???:__mpn_mul
   271,293    2    2   172,639   102     0         0      0     0  ???:__tls_get_addr
   221,184    5    5    73,728    36     0    49,152     48     0  ???:__isoc99_fscanf
   197,720    3    3    29,658     0     0    19,772      0     0  ???:__mpn_mul_1
   156,587   36   35    49,424    30     0    45,376    565     7  /lustre/home/d171/s1898201/PP_cw/MD_raw/C/MD.c:evolve
   128,699   17   17    38,276   613   245    15,649     24    10  ???:do_lookup_x
   110,592    1    1    73,728     0     0         0      0     0  ???:__strtod_internal

--------------------------------------------------------------------------------
-- Auto-annotated source: /lustre/home/d171/s1898201/PP_cw/MD_raw/C/util.c
--------------------------------------------------------------------------------
       Ir I1mr ILmr      Dr  D1mr DLmr      Dw  D1mw DLmw 

        .    .    .       .     .    .       .     .    .  #include <math.h>
        .    .    .       .     .    .       .     .    .  
        .    .    .       .     .    .       .     .    .  void visc_force(int N,double *f, double *vis, double *velo)
      195    6    6      66     0    0      69     2    0  {
        .    .    .       .     .    .       .     .    .    int i;
  110,610    0    0  36,870     0    0  24,582     0    0            for(i=0;i<N;i++){
1,069,056    6    6 393,216 3,073    0 294,912 1,537  960              f[i] = -vis[i] * velo[i];
        .    .    .       .     .    .       .     .    .            }
        9    1    1       9     0    0       0     0    0  }
        .    .    .       .     .    .       .     .    .  void wind_force(int N,double *f, double *vis, double velo)
      147    4    4      48     0    0      57     1    0  {
        .    .    .       .     .    .       .     .    .    int i;
  110,610    0    0  36,870     0    0  24,582     0    0            for(i=0;i<N;i++){
1,179,648    7    7 454,656 3,073    0 331,776     0    0              f[i] = f[i] -vis[i] * velo;
        .    .    .       .     .    .       .     .    .            }
        9    1    1       9     0    0       0     0    0  }
        .    .    .       .     .    .       .     .    .  void add_norm(int N,double *r, double *delta)
      138    3    3      45     0    0      51     3    0  {
        .    .    .       .     .    .       .     .    .    int k;
  110,610    1    1  36,870     0    0  24,582     0    0          for(k=0;k<N;k++){
1,523,712    9    9 577,536 3,076    0 430,080     1    0            r[k] += (delta[k] * delta[k]);
        .    .    .       .     .    .       .     .    .          }
        9    1    1       9     0    0       0     0    0  }
        .    .    .       .     .    .       .     .    .  
        .    .    .       .     .    .       .     .    .  double force(double W, double delta, double r) {
        .    .    .       .     .    .       .     .    .    return W * delta / (pow(r, 3.0));
        .    .    .       .     .    .       .     .    .  }

--------------------------------------------------------------------------------
-- Auto-annotated source: /lustre/home/d171/s1898201/PP_cw/MD_raw/C/control.c
--------------------------------------------------------------------------------
       Ir I1mr ILmr      Dr D1mr DLmr      Dw D1mw DLmw 

-- line 6 ----------------------------------------
        .    .    .       .    .    .       .    .    .  #include <stdio.h>
        .    .    .       .    .    .       .    .    .  #include <stdlib.h>
        .    .    .       .    .    .       .    .    .  #include <sys/time.h>
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  #define DECL
        .    .    .       .    .    .       .    .    .  #include "coord.h"
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  double second(void); 
       37    4    4       8    0    0      21    4    0  int main(int argc, char *argv[]){
        .    .    .       .    .    .       .    .    .    int i,j;
        .    .    .       .    .    .       .    .    .    FILE *in, *out;
        .    .    .       .    .    .       .    .    .    double tstart,tstop;
        .    .    .       .    .    .       .    .    .    double start,stop;
        .    .    .       .    .    .       .    .    .    char name[80];
        .    .    .       .    .    .       .    .    .    /*  timestep value */
        3    0    0       1    1    1       2    0    0    double dt=0.02;
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .    /*  number of timesteps to use. */
        2    0    0       0    0    0       2    1    0    int Nstep=100;
        2    1    1       0    0    0       2    0    0    int Nsave=5;
        .    .    .       .    .    .       .    .    .    
        3    0    0       1    0    0       0    0    0    if( argc > 1 ){
       51    4    4      17    0    0      20    2    0      Nstep=atoi(argv[1]);
        .    .    .       .    .    .       .    .    .    }
        3    0    0       1    0    0       1    1    1    wind[Xcoord] = 0.9;
        4    1    1       1    0    0       1    0    0    wind[Ycoord] = 0.4;
        4    0    0       0    0    0       1    0    0    wind[Zcoord] = 0.0;
        .    .    .       .    .    .       .    .    .    /* set up multi dimensional arrays */
       43    4    4      13    0    0      14    3    0    r = calloc(Nbody,sizeof(double));
       43    3    3      13    0    0      14    2    0    delta_r = calloc(Nbody*Nbody,sizeof(double));
       43    4    4      13    0    0      14    2    0    mass = calloc(Nbody,sizeof(double));
       43    3    3      13    0    0      14    2    0    radius = calloc(Nbody,sizeof(double));
       43    4    4      13    0    0      14    3    0    vis = calloc(Nbody,sizeof(double));
       66    5    5      21    0    0      19    4    0    f[0] = calloc(Ndim*Nbody,sizeof(double));
       66    5    5      21    0    0      19    4    0    pos[0] = calloc(Ndim*Nbody,sizeof(double));
       66    6    6      21    0    0      19    4    0    velo[0] = calloc(Ndim*Nbody,sizeof(double));
       66    5    5      21    0    0      19    1    0    delta_pos[0] = calloc(Ndim*Nbody*Nbody,sizeof(double));
       21    1    1       5    0    0       6    2    0    for(i=1;i<Ndim;i++){
      100    3    3      30    0    0      24    2    0      f[i] = f[0] + i * Nbody;
      100    4    4      30    0    0      24    0    0      pos[i] = pos[0] + i * Nbody;
      100    4    4      30    0    0      24    2    0      velo[i] = velo[0] + i * Nbody;
      100    4    4      30    0    0      24    0    0      delta_pos[i] = delta_pos[0] + i*Nbody*Nbody;
        .    .    .       .    .    .       .    .    .    }
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  /* read the initial data from a file */
        .    .    .       .    .    .       .    .    .  
        1    1    1       0    0    0       1    1    0    collisions=0;
       72    6    6      21    0    0      30    4    0    in = fopen("input.dat","r");
        .    .    .       .    .    .       .    .    .  
        3    0    0       1    0    0       0    0    0    if( ! in ){
        .    .    .       .    .    .       .    .    .      perror("input.dat");
        .    .    .       .    .    .       .    .    .      exit(1);
        .    .    .       .    .    .       .    .    .    }
        .    .    .       .    .    .       .    .    .  
   32,774    1    1   8,193    0    0   8,194   49    0    for(i=0;i<Nbody;i++){
1,224,704   25   25 430,080  100    0 438,272  393    0      fscanf(in,"%16le%16le%16le%16le%16le%16le%16le%16le%16le\n",
        .    .    .       .    .    .       .    .    .        mass+i,radius+i,vis+i,
        .    .    .       .    .    .       .    .    .        &pos[Xcoord][i], &pos[Ycoord][i], &pos[Zcoord][i],
        .    .    .       .    .    .       .    .    .        &velo[Xcoord][i], &velo[Ycoord][i], &velo[Zcoord][i]);
        .    .    .       .    .    .       .    .    .    }
       24    2    2       8    0    0      12    0    0    fclose(in);
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  /*
        .    .    .       .    .    .       .    .    .   * Run Nstep timesteps and time how long it took
        .    .    .       .    .    .       .    .    .   */
        .    .    .       .    .    .       .    .    .   
        5    1    1       1    0    0       4    0    0     tstart=second();
        6    0    0       2    0    0       2    0    0     for(j=1;j<=Nsave;j++){
        5    1    1       1    0    0       4    0    0        start=second();
        4    1    1       2    1    0       1    0    0        evolve(Nstep,dt); 
        .    .    .       .    .    .       .    .    .        stop=second();
        .    .    .       .    .    .       .    .    .        printf("%d timesteps took %f seconds\n",Nstep,stop-start);
        .    .    .       .    .    .       .    .    .        printf("collisions %d\n",collisions);
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  /* write final result to a file */
        .    .    .       .    .    .       .    .    .        sprintf(name,"output.dat%03d",j*Nstep);
        .    .    .       .    .    .       .    .    .        out = fopen(name,"w");
        .    .    .       .    .    .       .    .    .  
-- line 83 ----------------------------------------
-- line 95 ----------------------------------------
        .    .    .       .    .    .       .    .    .        fclose(out);
        .    .    .       .    .    .       .    .    .    }
        .    .    .       .    .    .       .    .    .    tstop=second();
        .    .    .       .    .    .       .    .    .    printf("%d timesteps took %f seconds\n",Nsave*Nstep,tstop-tstart);
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  }
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  double second()
        8    1    1       0    0    0       4    0    0  {
        .    .    .       .    .    .       .    .    .  /* struct timeval { long        tv_sec; 
        .    .    .       .    .    .       .    .    .              long        tv_usec;        };
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .  struct timezone { int   tz_minuteswest;
        .    .    .       .    .    .       .    .    .               int        tz_dsttime;      };     */
        .    .    .       .    .    .       .    .    .  
        .    .    .       .    .    .       .    .    .          struct timeval tp;
        .    .    .       .    .    .       .    .    .          struct timezone tzp;
        .    .    .       .    .    .       .    .    .          int i;
        .    .    .       .    .    .       .    .    .  
       74    3    3      18    0    0      38    0    0          i = gettimeofday(&tp,&tzp);
       18    0    0      10    1    1       0    0    0          return ( (double) tp.tv_sec + (double) tp.tv_usec * 1.e-6 );
        .    .    .       .    .    .       .    .    .  }
        .    .    .       .    .    .       .    .    .  

--------------------------------------------------------------------------------
-- Auto-annotated source: /lustre/home/d171/s1898201/PP_cw/MD_raw/C/MD.c
--------------------------------------------------------------------------------
     Ir I1mr ILmr     Dr D1mr DLmr     Dw D1mw DLmw 

-- line 6 ----------------------------------------
      .    .    .      .    .    .      .    .    .  #include <stdio.h>
      .    .    .      .    .    .      .    .    .  #include "coord.h"
      .    .    .      .    .    .      .    .    .  
      .    .    .      .    .    .      .    .    .  void visc_force(int N, double *f, double *vis, double *vel);
      .    .    .      .    .    .      .    .    .  void add_norm(int N, double *r, double *delta);
      .    .    .      .    .    .      .    .    .  double force(double W, double delta, double r);
      .    .    .      .    .    .      .    .    .  void wind_force(int N, double *f, double *vis, double vel);
      .    .    .      .    .    .      .    .    .  
     13    2    1      0    0    0     11    2    2  void evolve(int count, double dt) {
      .    .    .      .    .    .      .    .    .    int step;
      .    .    .      .    .    .      .    .    .    int i, j, k, l;
      .    .    .      .    .    .      .    .    .    int collided;
      .    .    .      .    .    .      .    .    .    double Size;
      .    .    .      .    .    .      .    .    .    /*
      .    .    .      .    .    .      .    .    .     * Loop over timesteps.
      .    .    .      .    .    .      .    .    .     */
      6    1    1      2    0    0      2    0    0    for (step = 1; step <= count; step++) {
     24    2    2      6    0    0     11    0    0      printf("timestep %d\n", step);
     24    2    2      6    0    0     11    0    0      printf("collisions %d\n", collisions);
      .    .    .      .    .    .      .    .    .  
      .    .    .      .    .    .      .    .    .      /* set the viscosity term in the force calculation */
     30    1    1      7    3    0      8    0    0      for (j = 0; j < Ndim; j++) {
    303    8    8     93    6    0    102   14    2        visc_force(Nbody, f[j], vis, velo[j]);
      .    .    .      .    .    .      .    .    .      }
      .    .    .      .    .    .      .    .    .      /* add the wind term in the force calculation */
     30    1    1      7    3    0      8    0    0      for (j = 0; j < Ndim; j++) {
    249    7    7     72    7    0     78   15    1        wind_force(Nbody, f[j], vis, wind[j]);
      .    .    .      .    .    .      .    .    .      }
      .    .    .      .    .    .      .    .    .      /* calculate distance from central mass */
 32,773    0    0  8,193    0    0  8,194    0    0      for (k = 0; k < Nbody; k++) {
122,880    3    3 40,960    1    0 36,864  515    0        r[k] = 0.0;
      .    .    .      .    .    .      .    .    .      }
     30    1    1      7    3    0      8    0    0      for (i = 0; i < Ndim; i++) {
    192    5    5     60    5    0     69   16    1        add_norm(Nbody, r, pos[i]);
      .    .    .      .    .    .      .    .    .      }
      5    1    1      1    0    0      2    0    0      for (k = 0; k < Nbody; k++) {
     28    2    2     10    2    0      8    3    1        r[k] = sqrt(r[k]);
      .    .    .      .    .    .      .    .    .      }
      .    .    .      .    .    .      .    .    .      /* calculate central force */
      .    .    .      .    .    .      .    .    .      for (i = 0; i < Nbody; i++) {
      .    .    .      .    .    .      .    .    .        for (l = 0; l < Ndim; l++) {
      .    .    .      .    .    .      .    .    .          f[l][i] = f[l][i] - force(G * mass[i] * M_central, pos[l][i], r[i]);
      .    .    .      .    .    .      .    .    .        }
      .    .    .      .    .    .      .    .    .      }
      .    .    .      .    .    .      .    .    .      /* calculate pairwise separation of particles */
-- line 50 ----------------------------------------

--------------------------------------------------------------------------------
Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw 
--------------------------------------------------------------------------------
 7   12   12 11   38    0 18   12   13  percentage of events annotated

